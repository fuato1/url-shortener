version: '3'

services:
  app:
    container_name: app
    hostname: app
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APP_PORT: 8080
      GRPC_SERVER_HOST: qrgen
      GRPC_SERVER_PORT: 8081
      GRPC_OTEL_COLLECTOR: otel:4317
    ports:
      - 80:8080
    volumes:
      - .:/app
    command: reflex -r '(\.go$$)' --decoration=fancy -s go run /app/main.go
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always

  jaeger:
    container_name: jaeger
    hostname: jaeger
    image: jaegertracing/all-in-one:1.29.0
    ports:
      - "16686:16686" # UI
      - "14250:14250" # write traces

  otel:
    container_name: otel
    hostname: otel
    image: otel/opentelemetry-collector
    depends_on:
      - jaeger
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      # - "8888:8888"   # Prometheus metrics exposed by the collector
      # - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
    volumes:
      - ./config/otel.yaml:/etc/otel/otel.yaml
      - otel_data:/etc/otel
    command: --config /etc/otel/otel.yaml
volumes:
  otel_data: {}